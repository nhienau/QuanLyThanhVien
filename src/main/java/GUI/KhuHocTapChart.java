package GUI;

import BLL.ThongTinSuDungBLL;
import POJO.DateRange;
import POJO.ThongKeKhuHocTap;
import helper.DateHelper;
import java.awt.BorderLayout;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JPanel;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import org.knowm.xchart.XYChartBuilder;
import org.knowm.xchart.style.markers.SeriesMarkers;

public class KhuHocTapChart extends javax.swing.JFrame {

    private ArrayList<ThongKeKhuHocTap> list;
    private List<Date> timestamps = new ArrayList<>();
    private List<Integer> values = new ArrayList<>();
    private String groupBy;
    private String datePattern;
    private String xAxisChartTitle;
    private XYChart chart;
    private DateRange dateRange;
    private String khoa;
    private String nganh;
    private ThongTinSuDungBLL ttsdBLL;
    private String chartTitle;

    public KhuHocTapChart() {
        initComponents();
    }

    public KhuHocTapChart(ThongTinSuDungBLL ttsdBLL, ArrayList<ThongKeKhuHocTap> list, DateRange dateRange, String groupBy, String khoa, String nganh) {
        initComponents();
        setLocationRelativeTo(null);
        this.ttsdBLL = ttsdBLL;
        this.dateRange = dateRange;
        this.groupBy = groupBy;
        this.khoa = khoa;
        this.nganh = nganh;
        this.list = this.groupBy.equalsIgnoreCase("date") ? ttsdBLL.getStatKhuHocTapUpToHour(dateRange, khoa, nganh) : list;
        setDatePattern(this.groupBy);
        separateData();
        this.chartTitle = getChartTitle(this.dateRange, this.groupBy, this.khoa, this.nganh);
        this.chart = getChart();
        displayChart(this.chart);
        addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent evt) {
                displayChart(chart);
            }
        });
    }

    private void separateData() {
        for (ThongKeKhuHocTap i : list) {
            timestamps.add(i.getTimeline());
            values.add(i.getAmount());
        }
    }

    private void setDatePattern(String groupBy) {
        switch (groupBy) {
            case "date":
                this.xAxisChartTitle = "Ngày";
                this.datePattern = "dd/MM/yyyy HH:mm";
                break;
            case "month":
                this.xAxisChartTitle = "Tháng";
                this.datePattern = "MM/yyyy";
                break;
            case "year":
                this.xAxisChartTitle = "Năm";
                this.datePattern = "yyyy";
                break;
            default:
        }
    }

    private XYChart getChart() {
        XYChart chart = new XYChartBuilder().xAxisTitle(this.xAxisChartTitle).yAxisTitle("Số lượng").width(1280).height(960).title(this.chartTitle).build();
        chart.getStyler().setDatePattern(this.datePattern);
        chart.addSeries("Số lượng", this.timestamps, this.values).setMarker(SeriesMarkers.NONE);
        chart.getStyler().setCursorEnabled(true);
        return chart;
    }

    public void displayChart(XYChart chart) {
        JPanel chartPanel = new XChartPanel<XYChart>(chart);
        pChartContainer.removeAll();
        pChartContainer.add(chartPanel, BorderLayout.CENTER);
        pChartContainer.repaint();
        pChartContainer.validate();
    }

    private String getChartTitle(DateRange dateRange, String groupBy, String khoa, String nganh) {
        return String.format(
                "%sKhoa: %s - Ngành: %s",
                this.groupBy.equalsIgnoreCase("date") ? "(" + DateHelper.dateRangeToString(this.dateRange, DateHelper.DATE_FORMATTER, " - ") + ") - " : "",
                this.khoa.equals("") ? "Tất cả" : this.khoa,
                this.nganh.equals("") ? "Tất cả" : this.nganh);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pChartContainer = new javax.swing.JPanel();
        placeholder = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý thành viên");
        setPreferredSize(new java.awt.Dimension(800, 600));

        pChartContainer.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout placeholderLayout = new javax.swing.GroupLayout(placeholder);
        placeholder.setLayout(placeholderLayout);
        placeholderLayout.setHorizontalGroup(
            placeholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        placeholderLayout.setVerticalGroup(
            placeholderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pChartContainer.add(placeholder, java.awt.BorderLayout.CENTER);

        getContentPane().add(pChartContainer, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhuHocTapChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhuHocTapChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhuHocTapChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhuHocTapChart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhuHocTapChart().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel pChartContainer;
    private javax.swing.JPanel placeholder;
    // End of variables declaration//GEN-END:variables
}
